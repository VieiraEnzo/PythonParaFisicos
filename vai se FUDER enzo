# Constants that describe the valid directions.  These should be used
# in functions get_factor and check_guess.
FORWARD = 'forward'
DOWN = 'down'
BACKWARD = 'backward'
UP = 'up'

# Constants that describe the multiplicative factor used when scoring a
# word in a particular direction.  This should be used in function get_factor.
FORWARD_FACTOR = 1
DOWN_FACTOR = 2
BACKWARD_FACTOR = 3
UP_FACTOR = 4

# Constants that describe the threshold for scoring.  This should be
# used in function get_points.
THRESHOLD = 5
BONUS = 12

# Constants that describe which puzzle to play.  Replace the 'puzzle1.txt' with
# any other puzzle file (e.g., 'puzzle2.txt') to play a different game.
PUZZLE_FILE = 'puzzle1.txt'

def get_column(puzzle: str, col_num: int) -> str:
    """Return column col_num of puzzle.

    Preconditions:
       -  0 <= col_num < number of columns in puzzle
       -  puzzle is in the proper 'Where's that word?' puzzle format

    >>> get_column('abcd\nefgh\nijkl\n', 1)
    'bfj'
    >>> get_column('abcd\nefgh\nijkl\n', 0)
    'aei'
    """

    puzzle_list = puzzle.strip().split('\n')
    column = ''
    for row in puzzle_list:
        column = column + row[col_num]

    return column


def get_row_length(puzzle: str) -> int:
    """Return the length of a row in puzzle.

    Preconditions:
       -  puzzle is in the proper 'Where's that word?' puzzle format

    >>> get_row_length('abcd\nefgh\nijkl\n')
    4
    >>> get_row_length('ab\ncd\nef\n')
    2
    """

    return len(puzzle.split('\n')[0])


def string_contains(text1: str, text2: str) -> bool:
    """Return True if and only if text2 appears anywhere in text1.

    >>> string_contains('abc', 'bc')
    True
    >>> string_contains('abc', 'cb')
    False
    """

    return text2 in text1

